KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks
Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
1College of Intelligence and Computing, Tianjin University, Tianjin, China 2School of Computer Science and Technology, Dalian University of Technology, Liaoning, China 3School of Computing, Macquarie University, Sydney, Australia 4Content and Knowledge Graph, Pinterest, New York, USA
ABSTRACT
Social Internet of Things (SIoT), a promising and emerging paradigm that injects the notion of social networking into smart objects (i.e., things), paving the way for the next generation of Internet of Things. However, due to the risks and uncertainty, a crucial and urgent problem to be settled is establishing reliable relationships within SIoT, that is, trust evaluation. Graph neural networks for trust evaluation typically adopt a straightforward way such as one-hot or node2vec to comprehend node characteristics, which ignores the valuable semantic knowledge attached to nodes. Moreover, the underlying structure of SIoT is usually complex, including both the heterogeneous graph structure and pairwise trust relationships, which renders hard to preserve the properties of SIoT trust during information propagation. To address these aforementioned problems, we propose a novel knowledge-enhanced graph neural network (KGTrust) for better trust evaluation in SIoT. Specifically, we first extract useful knowledge from users’ comment behaviors and external structured triples related to object descriptions, in order to gain a deeper insight into the semantics of users and objects. Furthermore, we introduce a discriminative convolutional layer that utilizes heterogeneous graph structure, node semantics, and augmented trust relationships to learn node embeddings from the perspective of a user as a trustor or a trustee, effectively capturing multi-aspect properties of SIoT trust during information propagation. Finally, a trust prediction layer is developed to estimate the trust relationships between pairwise nodes. Extensive experiments on three public datasets illustrate the superior performance of KGTrust over state-of-the-art methods.
CCS CONCEPTS
• Mathematics of computing → Graph algorithms; • Computing methodologies → Neural networks.
KEYWORDS
Graph Neural Networks, Trust Evaluation, Social Internet of Things
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. WWW ’23, April 30-May 4, 2023, Austin, TX, USA
© 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 978-1-4503-9416-1/23/04. . . $15.00 https://doi.org/10.1145/3543507.3583549
ACM Reference Format:
Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4. 2023. KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks. In Proceedings of the ACM Web Conference 2023 (WWW ’23), April 30-May 4, 2023, Austin, TX, USA. ACM, New York, NY, USA, 10 pages. https://doi.org/10.1145/3543507.3583549
1 INTRODUCTION
With the rapid development of Internet of Things (IoT) and communication technology, Social Internet of Things (SIoT) [1, 38], which integrates the concept of social networking into the IoT ecosystem, has aroused considerable research interest. The typical paradigm of SIoT involves a massive number of users, objects (or things) and their associations (user-user, user-object, as well as object-object). However, due to the inherent openness of SIoT, it is inevitable that malicious users or objects spread incorrect information or launch illegal attacks, inflicting serious damage to the availability and integrity of network resources. In addition, as users increasingly depend on intelligent and interconnected objects in every aspect of life, the demand for security and privacy is growing significantly. Therefore, it is of great importance and urgent to effectively establish reliable relationships within SIoT. Trust evaluation [6, 29], which aims to evaluate the unobserved trust relationship between a pair of nodes, is considered an effective method for assessing SIoT’ credibility and reliability. To date, an extensive amount of algorithms for trust evaluation have been proposed. For example, several studies adopt the idea of random walk [18, 20], employing trust propagation along the path from the source node to the target node to assess trustworthiness. Another line of attempt is the matrix factorization-based method [23, 42], which factorizes a trust matrix into low-rank embeddings of nodes and their correlations by incorporating prior knowledge or noderelated information. However, these methods either rely heavily on the observed trust relationships or incur the high computational overhead, limiting the performance of trust evaluation. Recently, graph neural networks (GNNs) [12, 37, 43],which exhibit significant power in naturally capturing both graph structure and node features, have gained great success and paved a new way for trust evaluation. For instance, Guardian [17] estimates the trustworthiness among two nodes by designing a GNN-based model that captures both graph structure and associated trust relationships. GATrust [10] presents a GNN-driven approach which integrates multiple node attributes and observed trust interactions to predict the trustworthiness of pairwise nodes. However, these methods suffer from an inability to well comprehend and analyze node semantics, as they usually initialize node embeddings via
arXiv:2302.11396v1 [cs.AI] 22 Feb 2023


WWW ’23, April 30-May 4, 2023, Austin, TX, USA Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
straightforward ways such as one-hot or node2vec. More importantly, the observed trust relationships in real-world are often very sparse [25], which makes it difficult for these methods to fully model the multi-aspect properties of SIoT trust during information propagation, thus negatively influencing the prediction of trust relationships. So an interesting yet important question is how to effectively design a GNN-based method for more accurate trust evaluation within SIoT. Particularly, two challenges need to be addressed. First, the rich node semantics within SIoT should be taken into consideration. As nodes in SIoT are generally associated with textual information such as comments or descriptions, it is crucial to deeply mine and encode these useful data to essentially embody the inherent characteristics of nodes. Second, multi-aspect properties of SIoT trust should be effectively preserved. The underlying structure of SIoT is usually complex, which contains not only the heterogeneous graph structure but also the pairwise trust relationships. Therefore, a reliable GNN-based method ought to make allowance for flexibly preserving the properties of SIoT trust (including asymmetric, propagative, and composable nature) when information propagates along the heterogeneous graph structure, especially when the observed trust connections are very sparse. In light of the aforementioned challenges, we propose KGTrust, a knowledge enhanced graph neural network model for trust evaluation in SIoT. Specifically, we first design an embedding layer to fully model the semantics of users and objects by extracting useful and relevant knowledge from users’ comment behaviors and external structured triples, respectively. We then introduce a personalized PageRank-based neighbor sampling strategy to augment the trust structure, alleviating the sparsity of user-specific trust relationships. After that, we employ a discriminative convolutional mechanism to learn node embeddings from the perspective of a user as a trustor or a trustee, and adaptively integrate them with a learnable gating mechanism. In this way, multi-aspect properties of SIoT trust, including asymmetric, propagative and composable nature, can be effectively preserved. Finally, the learned embeddings for pairwise users are concatenated and fed into a prediction layer to estimate their trust relationships. We summarize our main contributions as follows:
• To the best of our knowledge, we are the first to gain a deeper insight into the trust evaluation within SIoT via jointly considering three key ingredients, that is, heterogeneous graph structure, node semantics and associated trust relationships. • We present a novel knowledge enhanced graph neural network, named KGTrust, which innovatively mines and models the intrinsic characteristics of users and objects with the guidance of external knowledge and multi-aspect trust properties, for assessing trustworthiness in SIoT. • Extensive experiments across three public datasets demonstrate the superior performance of the new approach KGTrust over state-of-the-art baselines.
2 PRELIMINARIES
We first give the notations and problem definition, then introduce properties of SIoT trust, and finally discuss graph neural networks as the base of our proposed KGTrust.
2.1 Notations and Problem Definition
Definition 1. Social Trust Internet of Things. A Social Trust Internet of Things, defined as G = (V , E, A, R,ψ, φ), is a form of heterogeneous directed network, where V = {v1, . . . , vn } and E = {ei j } ⊆ V ×V represent the sets of nodes and edges, respectively. It is also associated with a node type mapping function ψ : V → A, and an edge type mapping function φ : E → R, where A ∈ {user, object} and R ∈ {⟨user, user⟩, ⟨user, object⟩, ⟨object, user⟩, ⟨object, object⟩} denote the sets of node and edge types. All edges formulate an original adjacency matrix A = (ai j )n×n, where ai j denotes the relation between nodes vi and v j . Notice that, the edges representing the trust relationships between user nodes are asymmetric while the others are symmetric.
Definition 2. Trust Evaluation. Given a Social Trust Internet of Things G, letT = {⟨vi, v j ⟩, ti j |ei j ∈ E} be the set of observed trust relationships of user nodes, where nodes vi and v j denote trustor and trustee, respectively, and ti j measures the trustworthiness from nodes vi to v j , which is typically application specific. For example, in SIGCOMM-2009 dataset1, trustworthiness is simply divided into two types, that is, trust or distrust. Trust evaluation is to design a mapping F to evaluate the trustworthiness of unobserved/missing trust relationship of the trustor-trustee pair ti j , where vi, v j ∈ V , vi ≠ v j , and ei j ∉ E. Frequently used notations are summarized in Appendix A.
2.2 Properties of SIoT Trust
To essentially establish the trustworthiness between pairwise user nodes within SIoT, multi-aspect trust properties, including asymmetric, propagative and aggregative, should be considered. Asymmetric Nature. The trust relationship between nodes is unequal, that is, node vi trusts node v j does not mean node v j trusts node vi , shown as Figure 1(a). Formally, let ti j be the trustworthiness of trustor-trustee pair ⟨vi, v j ⟩, the asymmetry nature of trust is expressed as:
ti j ≠ t ji . (1)
Propagative Nature. It indicates that trust may be propagated from one node to another, creating a trust chain for two nodes that are not explicitly connected. As shown in Figure 1(b), assuming that node vi trusts node v j and node v j trusts node vk , it can then
(a) Asymmetric Nature (b) Propagative Nature
(c) Composable Nature
Figure 1: The illustration of properties of SIoT trust.
1 https://crawdad.org/thlab/sigcomm2009


KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks WWW ’23, April 30-May 4, 2023, Austin, TX, USA
Figure 2: The architecture of KGTrust, which is constituted of three key components: 1) Embedding Layer: a comprehensive user and object modeling by integrating user comments and external knowledge triples; 2) Heterogeneous Convolutional Layer: a knowledge enhanced graph neural network to further mine and learn node latent embeddings; as well as 3) Prediction Layer: measuring the trust relationships between user pairs.
be inferred that node vi may trust node vk to a certain extent. The propagation nature of trust is defined as:
ti j ∧ t jk ⇒ tik . (2)
Composable Nature. It refers to the fact that the trustworthiness propagated by a node from different trust chains to another non-neighbor node can be aggregated. For example, in Figure 1(c), there are two trust chains among node vi and node v j , that is, vi → vk → v j and vi → vm → vn → v j . As a result, it is necessary to aggregate the trustworthiness from these two trust chains to determine the trust relationship from node vi to node v j .
2.3 Graph Neural Networks
Graph neural networks (GNNs) are a kind of neural networks that directly operate on graph-structured data [5, 28]. They typically follow the message passing framework, which learns embedding of each node through iteratively propagating and aggregating feature information from its topological neighbors. Mathematically, let h(l)
i
be the latent embedding of node vi at the l-th layer, the message passing process is defined as:
m (l )
i = AGG(l) ({h(l−1)
j : v j ∈ N (vi )}),
h (l )
i = UPD(l) (h(l−1)
i
, m(l)
i ),
(3)
where AGG and UPD denote the functions to aggregate and update the message, h(0)
i represents the node’s attributes, and N (vi ) denotes the set of neighbors of node vi .
3 METHODOLOG
We first give a brief overview of the proposed method, and then introduce three key components in detail.
3.1 Overview
To effectively assess the potential trust relationships within SIoT, we propose a novel knowledge enhanced graph neural network that can fully mine the inherent characteristics of nodes and model the multi-aspect properties of SIoT trust, namely KGTrust. The whole structure of KGTrust is illustrated in Figure 2, which consists of three main components, that is, embedding layer, heterogeneous convolutional layer as well as predictor layer. Specifically, for the embedding layer, we initialize the embeddings of users and objects by extracting useful and related knowledge from users’ comment behaviors and external structured triples, so as to fully explore the intrinsic characteristics of users and objects. For the heterogeneous convolutional layer, we utilize the propagative nature of SIoT trust to augment the trust structure, and then introduce a discriminative convolutional mechanism to learn both node and object embeddings by considering the role of a user as a trustor or a trustee, respectively. After that, we leverage a learnable gating mechanism to adaptively integrate these two types of user embeddings, capturing the asymmetric nature of SIoT trust. For the prediction layer, a single-layer multiple perceptron is introduced to predict the trust relationships between user pairs based on user embeddings.


WWW ’23, April 30-May 4, 2023, Austin, TX, USA Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
3.2 Embedding Layer
To gain a deeper insight into the inherent characteristics of users and objects within SIoT, we initialize user and object embeddings, which is the cornerstone of GNNs, by taking account of the users’ comment behaviors and external knowledge related to object descriptions, respectively. User Embedding. In SIoT, users typically deliver their opinions on objects by providing comments in the form of text, which reflects the characteristics of users to a certain extent. Based on this, for each user, we employ Doc2vec [14], an unsupervised algorithm to learn fixed-length node embeddings for texts with variable lengths, to initialize its embedding. Specifically, for a user node vi , let di be the set containing all the comments delivered by vi , the user embedding hi can then be calculated as:
h
i = Doc2vec(di ). (4)
Object Embedding. For object nodes, we capture their characteristics by integrating structured knowledge associated with object descriptions (i.e., head-predicate-tail triplets) from the knowledge graph. Here we employ TransE [4], a simple and effective approach, to parameterize triplets to learn object embeddings. It encodes the head (or tail) node as a low-dimensional embedding and the relation as algebraic operations between head and tail embeddings. Given a triplet (h, r, t), let r be the embedding of relation r , h and t be the embeddings of objects h and t, respectively. TransE aims to embed each object and relation by optimizing the translation principle h + r ≈ t, if (h, r, t) holds. The score function is formulated as:
f (h, r, t) = −||h + r − t||22, (5)
where h and t are subject to the normalization constraint that the magnitude of each vector is 1. Intuitively, a large score of f (h, r, t) indicates that the triplet is more likely to be a true fact in real-world, and vice versa. Note that we only consider triplets where object nodes within the SIoT are head instead of tail. In this way, the object embeddings can be effectively enriched at a semantic level. Embedding Transformation. Considering that the generated user and object embeddings may have unequal dimensions, or even be lied in different embedding spaces, we need to project these two types of embeddings into the same embedding space. For a node vi with type ψi , we project its embeddings into the same latent embedding space using a type-specific linear transformation Wψi :
h′
i = Wψi · hi, (6)
where hi and h′
i are the original and projected embedding of node vi , respectively.
3.3 Heterogeneous Convolutional Layer
After initializing the user and object embeddings, we further design a heterogeneous convolutional layer, which takes the multi-aspect trust properties into consideration, so as to better assess trustworthiness among users in SIoT. It mainly consists of three modules: personalized PageRank (PPR)-based neighbor sampling, information propagation and information fusion.
PPR-Based Neighbor Sampling. Generally, the available userspecified trust relationships within SIoT are often very sparse, that is, a limited number of user pairs with trust relationships are buried
in a large proportion of user pairs without trust relationships, making trust evaluation an arduous task [23]. To this end, we consider employing personalized PageRank, which shows effectiveness in graph neural networks [13], to augment the trust structure. Personalized PageRank [7] adopts a random walk with restart based strategy that uses the propagative nature of SIoT trust to calculate the correlation between nodes. It takes the graph structure as input, and computes a ranking score pi j from source node vi to target node v j , where the larger pi j , the more similar these two
nodes. Formally, given a SIoT G = (V , E), let ˆA =  ̃D− 12  ̃A  ̃D− 21 be the normalized adjacency matrix, where  ̃A = A + I stands for the adjacency matrix with self-loops, the PPR matrix P is calculated as:
P = (1 − λ) ˆAP + λI, (7)
where λ is the reset probability. It is worth noting that we use a push iteration method to compute PPR scores according to the existing work [3], which can be approximated effectively even for very large networks [26]. Then, the augmented trust relationships of each user node vi can be constructed by choosing its top k PPR neighbors:
Ni = arg max
V ′ ⊂VU , |V ′ |=k
∑︁
vj ∈V ′
pi j , (8)
where VU represents the set of user nodes in SIoT. In this way, several long-range but informative trust relationships can be captured, and further promote the modeling of user nodes. Information Propagation. Due to the asymmetry of trust relationships in SIoT, each user may have dual roles as a trustor or trustee. For this purpose, we consider propagating node embeddings over both trustor role and trustee role, so as to extract two specific embeddings in these two roles. Specifically, from the perspective of trustor, we learn the embeddings of users and objects through users’ augmented outgoing trust relationships, objects’ connections, and interactions between userobject pairs. Mathematically, given a target node vi , as different types of neighbor nodes (user or object) may have different impacts on it, we employ type-level attention [8] to learn the importance of different types of neighbor nodes. Let ˆAO = [aˆi j ] be the normalized adjacency matrix which is related to the trustor role, hψ be the embedding of type ψ , which is defined as the sum of the neighbor node embedding h′
j with node v j ∈ Ni under type ψ , that is:
h
ψ=
∑︁
vj
ˆ
ai j h′
j . (9)
Based on the target node embedding h′
i and its corresponding type embedding hψ , the type-level attention weights can then be calculated as:
αψ = softmaxψ (σ (ηT
ψ [h′
i , hψ ])), (10)
where ηψ is the attention vector for the type ψ , and softmax is adopted to normalize across all the types. In addition, considering that different neighbor nodes of the same type could also have different importance, we further apply node-level attention [28] to learn the weights between nodes of the same type. Formally, given a target node vi with type ψ , let v j be its neighbor node with type ψ ′, the node-level attention weights


KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks WWW ’23, April 30-May 4, 2023, Austin, TX, USA
can then be computed as:
βi j = softmaxvj (σ (γT · αψ′ [h′
i, h′
j ])), (11)
where γ is the attention vector, and softmax is applied to normalize across all the neighbor nodes of the target node vi . By integrating the above process, the matrix form of the layerwise propagation rule can be defined as follows:
H(l) = σ (
∑︁
ψ ∈A Bψ · H(l−1)
ψ · W(l−1)
ψ ), (12)
where A is the set of node types in SIoT, and Bψ = (βi j )n×n represents the attention matrix. In this way, the specific information about trustor role can be obtained. As for the trustee role, we learn the node embeddings via users’ augmented incoming trust relationships, objects’ connections, and interactions between user-object pairs, which can be calculated in the same way as in trustor role. Therefore, the specific information about trustee role can be captured by generating the node embeddings H. Information Fusion. In order to achieve the optimal combination of embeddings of a user in different roles (trustee or trustor) for downstream trust evaluation, we introduce a learnable gating mechanism [39] to determine how much the joint embedding depends upon the role of trustor or trustee. Given a user node vi , let h
i and hi represent its embeddings as trustor role and trustee role, respectively, the joint representation zi can be calculated as:
z
i = ge ⊙ hi + (1 − ge ) ⊙ hi, (13)
where ge is a gating vector with elements in [0, 1] to balance embeddings, and ⊙ represents element-wise multiplication. Obviously, the joint embedding with gate closer to 0 tends to use the embedding of a user as a trustee; whereas the joint embedding with gate closer to 1 utilizes the embedding of a user as a trustor. More importantly, to constrain the value of each element in [0, 1], we apply sigmoid function to calculate the gate ge as:
g
e = sigmoid(  ̃ge ), (14)
where  ̃ge is a real-value vector that is learned during training.
3.4 Predictor Layer
To convert the learned user embeddings into the latent factor of trust relationship in SIoT, for a given user pair ⟨vi, v j ⟩, we first concatenate the embeddings of nodes vi and v j , and then feed them to a multiple perceptron (MLP) followed by a softmax function as:
 ̃
yi j = softmax(MLP(zi ∥ zj )), (15)
where ∥ is the concatenation operator, and y ̃i j is the predicted probability that the user pair ⟨vi, v j ⟩ belongs to a trusted pair or a distrusted pair. Finally, we define the trust evaluation loss function by using cross entropy as:
L=−
∑︁
vi vj
yi j ln y ̃i j , (16)
where yi j denotes the ground truth of trust relationship of user pair ⟨vi, v j ⟩. In particular, we employ the back propagation algorithm and Adam optimizer to train the model.
4 EXPERIMENTS
We first introduce the experimental setup, and then compare the new approach KGTrust with state-of-the-arts in terms of effectiveness and robustness. We finally present an in-depth analysis of different components of KGTrust and give the parameter analysis.
4.1 Experimental Setup
Datasets. We conduct experiments on three widely used SIoT datasets, namely FilmTrust2, Ciao3 and Epinions3, where the basic information is summarized in Table 1. More details of datasets are provided in Appendix B.1.
Table 1: Statistics of the datasets.
FilmTrust Ciao Epinions
#Users 1508 4409 8174 #Objects 2071 12,082 11,379 #Comment Behaviors - 136,105 306,133 #Trust Relationships 1853 88,649 224,589 Trust Network Density 0.0008 0.0046 0.0034
“-” denotes no such information provided by the dataset.
Baselines. We compare KGTrust with eight state-of-art methods. They include: 1) the network embedding methods GAT [28], SGC [36], SLF [40], STNE [41] and SNEA [16], and 2) the trust evaluation methods DeepTrust [30], AtNE-Trust [32] and Guardian [17]. More details of baselines are provided in Appendix B.2. Implementation Details. For all baselines, we use the source codes released by their corresponding authors. For KGTrust, we use Wikipedia anchors to align the mentions extracted from object descriptions of SIoT to Wikidata5M [33], a newly proposed largescale knowledge graph containing 4M entities and 21M fact triplets. We use Adam optimizer with an initial learning rate of 0.005 and a weight decay of 5e-4. In addition, we set the layer number of heterogeneous convolutional mechanisms as 2, the reset probability λ as 0.15 according to [44], and search the top k for PPR-based neighbor sampling strategy in {10, 20, 30, 40, 50}. As there are only positive links (e.g., observed trust relationships) in our FilmTrust, Epinions and Ciao datasets, a set of unlinked user pairs with the same proportion is randomly selected as the negative instance set for training and testing. We use Accuracy and F1-Score, which are two commonly used metrics in trust evaluation tasks, to measure the performance of our proposed KGTrust and baselines.
4.2 Performance Comparisons
We empirically compare KGTrust to baselines from two perspectives, including effectiveness and robustness. Effectiveness. For different datasets, we set the ratio of training and testing set to 90%:10%, and run each method 10 times to report the average results of different models. As presented in Table 2, we can find that KGTrust performs consistently much better than all baselines across three datasets. To be
2 http://www.librec.net/datasets.html
3 http://www.cse.msu.edu/~tangjili/trust.html


WWW ’23, April 30-May 4, 2023, Austin, TX, USA Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
Table 2: Performance comparions on three SIoT datasets in terms of Accuracy (%) and F1-Score (%). (bold: best)
Datasets Metrics GAT SGC SLF STNE SNEA DeepTrust AtNE-Trust Guardian KGTrust
FilmTrust Accuracy 68.29 75.61 65.55 72.87 63.91 53.05 63.11 77.74 79.82
F1-Score 71.74 77.14 65.65 73.27 66.67 64.63 65.13 79.78 80.92
Ciao Accuracy 64.28 69.93 72.17 71.33 68.97 50.17 68.23 72.17 72.56
F1-Score 71.36 70.34 73.39 71.38 70.83 66.52 71.50 73.50 74.30
Epinions Accuracy 72.05 78.62 80.83 79.51 74.63 58.38 74.35 80.82 81.39
F1-Score 75.57 78.76 80.95 78.57 74.92 64.80 74.88 81.11 81.84
Table 3: Performance comparions with different training ratios on three SIoT datasets. (bold: best)
Datasets Metrics Training GAT SGC SLF STNE SNEA DeepTrust AtNE-Trust Guardian KGTrust
FilmTrust
Accuracy (%)
50% 60.36 71.26 54.96 69.42 60.14 49.51 60.17 74.14 74.94 60% 62.79 72.21 55.51 69.98 61.01 50.08 60.72 74.81 76.11 70% 64.39 73.16 61.22 72.14 62.90 50.20 62.14 75.51 78.16 80% 67.28 74.01 63.61 72.78 63.30 51.68 63.00 76.45 79.66 90% 68.29 75.61 65.55 72.87 63.91 53.05 63.11 77.74 79.82
F1-Score (%)
50% 62.35 71.52 56.48 69.44 62.45 60.11 60.27 75.52 75.98 60% 63.51 72.40 57.37 70.17 62.68 60.38 61.69 76.52 76.73 70% 66.80 73.83 62.23 72.17 64.83 62.20 63.42 78.56 78.94 80% 68.34 74.40 65.00 72.33 65.12 63.41 63.88 79.08 80.47 90% 71.74 77.14 65.65 73.27 66.67 64.63 65.13 79.78 80.92
Ciao
Accuracy (%)
50% 59.76 67.40 71.32 70.69 66.88 49.80 62.24 71.27 71.72 60% 61.03 68.29 71.66 70.87 67.82 50.01 62.66 71.62 72.11 70% 62.17 68.39 71.89 70.92 68.15 50.03 63.52 71.90 72.34 80% 63.01 68.81 72.08 71.05 68.53 50.07 66.58 71.94 72.36 90% 64.28 69.93 72.17 71.33 68.97 50.17 68.23 72.17 72.56
F1-Score (%)
50% 66.47 67.53 71.87 70.83 67.68 61.30 62.76 71.84 72.85 60% 68.08 68.58 72.68 70.85 68.87 61.38 63.03 72.28 73.11 70% 70.61 68.78 72.88 71.07 69.45 61.77 65.37 72.67 73.23 80% 70.85 69.76 73.00 71.32 70.15 63.63 69.92 73.32 74.06 90% 71.36 70.34 73.39 71.38 70.83 66.52 71.50 73.50 74.30
Epinions
Accuracy (%)
50% 61.70 77.22 79.99 79.04 73.84 55.53 71.90 80.15 80.59 60% 61.92 77.57 80.05 79.13 74.12 56.25 73.01 80.22 80.65 70% 64.76 77.82 80.44 79.32 74.36 56.71 73.40 80.31 80.96 80% 70.79 78.17 80.60 79.45 74.59 58.23 73.59 80.55 81.14 90% 72.05 78.62 80.83 79.51 74.63 58.38 74.35 80.82 81.39
F1-Score (%)
50% 65.60 77.63 80.08 78.18 73.28 61.27 72.87 80.41 81.05 60% 66.64 77.92 80.15 78.22 73.73 63.93 73.74 80.51 81.11 70% 72.67 78.05 80.46 78.46 74.19 64.10 73.80 80.58 81.46 80% 72.84 78.56 80.63 78.50 74.61 64.36 74.29 80.86 81.70 90% 75.57 78.76 80.95 78.57 74.92 64.80 74.88 81.11 81.84
specific, in terms of accuracy, the improvement of KGTrust over different baselines ranges from 2.08% to 26.77%, 0.39% to 22.39%, and 0.57% to 23.01% on FilmTrust, Ciao, and Epinions, respectively. In terms of F1-Score, the improvement of KGTrust over different baselines ranges from 1.14% to 16.29%, 0.80% to 7.78%, and 0.73%
to 17.04% on these three datasets. These results not only demonstrate the superiority of enriching node semantics with node-related knowledge, but also validate the effectiveness of flexibly preserving the multi-aspect properties of SIoT trust during information propagation. Particularly, the performance of KGTrust is much better


KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks WWW ’23, April 30-May 4, 2023, Austin, TX, USA
than that of vanilla GAT (i.e., 11.53%, 8.28%, 9.34% relative improvements in accuracy, and 9.18%, 2.94%, 6.27% relative improvements in F1-Score), which further shows the significance of jointly considering three key ingredients within SIoT, namely heterogeneous graph structure, node semantics and associated trust relationships. Neither DeepTrust nor AtNE-Trust is so competitive here, which is mainly because they fail to make better use of the information propagation over graph structure, seriously affecting their performance for trust evaluation. Robustness. To further measure the stable ability of our KGTrust and baselines, we conduct experiments across all training and testing set ratios. The ratio of training set is set as x% and the remaining (1 − x)% as the testing set, where x belongs to {50, 60, 70, 80, 90} over three datasets. We run each method 10 times and report the average performance in terms of accuracy and F1-Score. The results are shown in Table 3. As shown, the proposed method KGTrust always performs the best across different training ratios and datasets. Specifically, when fewer observed trust relationships are provided, the performances of baselines are surprisingly reduced, especially the classical GNN-based methods such as GAT, while our model still achieves relatively high performance. This demonstrates that our method can better assess trust relationships by validly alleviating data sparsity with personalized PageRankbased neighbor sampling. Moreover, as the ratio of observed trust relationships increases, KGTrust consistently maintains superior and achieves the best performance when the training set ratio is 90%, which validates the effectiveness and robustness of the proposed approach. Also of note, KGTrust outperforms Guardian, which uses GNN for trust evaluation, in all cases, further indicating the rationality of fully mining the intrinsic characteristics of nodes with the guidance of node-related knowledge.
4.3 Ablation Study
Similar to most deep learning models, our proposed KGTrust also contains some important components that may have a significant impact on the performance. To test the effectiveness of each component, we conduct experiments by comparing KGTrust with five variations. The variants are as follows: 1) KGTrust of using random vectors instead of introducing structured triples to initialize object embeddings, named as w/o Triples, 2) KGTrust of removing PPR-based neighbor sampling, named as w/o PPR, 3) KGTrust of removing the trustee role of a node, and aggregating information only from its trustor role, named as w/o Trustee, 4) KGTrust of removing the trustor role of a node, and aggregating information only from its trustee role, named as w/o Trustor, and 5) KGTrust of employing concatenation operator instead of gating mechanism to fuse the two role embeddings (truster or trustee) of a user node, named as KGTrust (Con). From the results in Table 4, we can draw the following conclusions: 1) The results of KGTrust are consistently better than its five variants, indicating the effectiveness and necessity of jointly taking into account of heterogeneous graph structure, node semantics and associated trust relationships within SIoT. 2) Removing structured triples or PPR-based neighbor sampling strategy leads to slight performance drop, which demonstrates the usefulness of employing external knowledge to deeply mine object semantics
Table 4: Comparisons of our KGTrust and its five variants on three SIOT datasets in terms of Accuracy (%) and F1-Score (%). For FilmTrust, we do not introduce structured triples as no object descriptions provided, while such information is provided by Ciao and Epinions.
Datasets FilmTrust Ciao Epinions
Accuracy F1-Score Accuracy F1-Score Accuracy F1-Score
KGTrust 79.82 80.92 72.56 74.30 81.39 81.84 - w/o Triples - - 71.10 72.48 80.51 80.86 - w/o PPR 78.29 78.74 72.12 72.88 80.71 81.19 - w/o Trustee 78.13 79.18 59.07 64.60 70.73 72.10 - w/o Trustor 77.22 78.37 60.58 65.67 70.62 72.01 KGTrust (Con) 76.76 77.51 59.28 64.74 70.75 73.10
and propagative nature of trust to enrich the trust relationships. 3) Neither KGTrust w/o Trustee nor KGTrust w/o Trustor is so competitive here, making us realize the importance of considering the trust asymmetry nature during information propagation. 4) Compared to KGTrust (Con), the improvement brought by KGTrust is more significant, which illustrates the rationality of adaptively fusing the embeddings of dual roles of a user.
4.4 Parameter Analysis
We investigate the sensitivity of two main parameters, including the top k for PPR-based neighbor sampling and the dimension of final embeddings, on Ciao and Epinions datasets. Results on FilmTrust dataset can be found in Appendix C. Analysis of k. The parameter k determines the number of trust relationships augmented by each user node with PPR-based neighbor sampling. We vary its value from 10 to 50 and the corresponding results are shown in Figure 3. With the increase of augmented trust relationships, the performance shows a trend of first rising and then descending. This is probably because a small number of augmented trust relationships are not enough to obtain informative node embeddings, whereas too many augmented trust relationships may introduce noise and thus weaken the information propagation.
(a) Ciao (b) Epinions
Figure 3: The performance with different numbers of top k for PPR-based neighbor sampling.
Analysis of Final Embedding Dimension. We test the effect of the dimension of final embedding, and vary it from 16 to 256. The result is shown in Figure 4. With the increase of the dimension of final embeddings, the values of metrics, including accuracy and F1Score, increase first and then start to decrease. It is reasonable since KGTrust needs a suitable dimension to encode the key ingredients


WWW ’23, April 30-May 4, 2023, Austin, TX, USA Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
within SIoT, including heterogeneous graph structure, node semantics and associated trust relationships, while larger dimensions may introduce additional redundancies, affecting the performance of assessing trustworthiness.
(a) Ciao (b) Epinions
Figure 4: The performance with different dimensions of final embedding.
5 RELATED WORK
We briefly review some literatures that are related to our work, that is, trust evaluation and knowledge graph neural networks.
5.1 Trust Evaluation
Trust plays a crucial role in assisting users gather reliable information and trust evaluation. predicting the unobserved pairwise trust relationships among users, draws considerable research interest. Existing trust evaluation methods can be roughly divided into three categories, including random walk-based methods, matrix factorization-based methods and deep learning-based methods.
Random Walk-Based methods. In the past decade, many attentions have been paid to exploit trust propagation along the path from the trustor to the trustee to assess trustworthiness. For example, ModelTrust [22] conducts motivating experiments to analyze the difference in accuracy and coverage between local and global trust measures, and then introduces a local trust metric to predict trustworthiness of unknown users. OptimalTrust [20] designs a new concept, namely quality of trust, to search the optimal trust path to generate the most trustworthy evaluation. After that, AssessTrust [21] introduces three-valued subjective logic (3VSL) that effectively considers the information in trust propagation and aggregation to assess multi-hop interpersonal trust. OpinionWalk [18] computes the trustworthiness between any two users based on 3VSL and breadth-first search strategy.
Matrix Factorization-Based Methods. Several recent studies have extended matrix factorization to trust evaluation [35], where the basic idea is to learn the low-rank representations of users and their correlations by incorporating prior knowledge and noderelated data. For instance, hTrust [23] presents an unsupervised method that exploits low-rank matrix factorization and homophily effect for trust evaluation. mTrust [24] argues that the trust relationships among users are usually multiple and heterogeneous, and accordingly designs a fine-grained representation to incorporate multi-faceted trust relationships. sTrust [35] proposes a trust prediction model by considering social status theory that reflects users’ position or level in the social community.
Neural Network-Based Methods. As neural networks become the most eye-catching tools for tracking graphs, several efforts have
been devoted to utilizing neural networks to boost the performance of trust evaluation. For example, NeuralWalk [19] designs a neural network architecture that models single-hop trust propagation and trust combination for assessing trust relationships. DeepTrust [30] presents a deep trust evaluation model which effectively mines user characteristics by introducing associated user attributes. AtNETrust [32] improves the performance of trust relationship prediction by jointly capturing the properties of trust network and multi-view user attributes. C-DeepTrust [31] points out that the user preference may change due to the drifts of their interests, and accordingly integrates both the static and dynamic user preference to tackle the trust evaluation problem. Guardian [17] estimates the trustworthiness between any two users by simultaneously capturing both social connections and trust relationships. GATrust [10] presents a GNN-driven approach which integrates multiple node attributes and the observed trust interactions for trust evaluation. Despite various trust evaluation algorithms or models have been developed, they still suffer from an inability to comprehensively mine and encode the node semantics within SIoT and multi-aspect properties of SIoT trust.
5.2 Knowledge Graph Neural Networks
To enable more effective learning on graph-structured data, researchers have dedicated to employing external knowledge[2, 11], such as large-scale knowledge bases Wikipedia and Freebase, to enrich node representations and apply them to downstream tasks. For example, KGAT [34] presents a knowledge-aware recommendation approach by explicitly modeling the high-order connectivity with semantic relations in collaborative knowledge graph. COMPGCN [27] learns both node and relation embeddings in a multi-relational graph via using entity-relation composition operations from knowledge graph embedding. Caps-GNN [15] designs a novel personalized review generation approach with structural knowledge graph data and capsule graph neural networks. Later on, RECON [2] points out that knowledge graph can provide valuable additional signals for short sentences, and develops a sentence relation extraction integrating external knowledge. KCGN [9] proposes an end-to-end model that jointly injects knowledge-aware user- and item-wise dependent structures for social recommendation. However, how to utilize the guidance of external knowledge to facilitate the understanding of node semantics within SIoT, and further assess trustworthiness among users is still an area that needs to be explored urgently.
6 CONCLUSION
In this paper, we present a novel knowledge enhanced graph neural network, namely KGTrust, for trust evaluation in Social Internet of Things. In specific, we comprehensively incorporate the rich node semantics within SIoT by deeply mining and encoding node-related information. Considering that the observed trust relationships are often relatively sparse, we use personalized PageRank-based neighbor sampling strategy to enrich the trust structure. To further maintain the multi-aspect properties of SIoT trust, we learn effective node embeddings by employing a discriminative convolutional mechanism that considers the propagative and composable nature from the perspective of a user as a trustor or a trustee, respectively.


KGTrust: Evaluating Trustworthiness of SIoT via Knowledge Enhanced Graph Neural Networks WWW ’23, April 30-May 4, 2023, Austin, TX, USA
After that, a learnable gating mechanism is introduced to adaptively integrate the information from dual roles of a user. Finally, the learned embeddings for pairwise users are concatenated for a trust relationship predictor. Extensive experimental results demonstrate the superior performance of the proposed new approach over state-of-the-arts across three benchmark datasets.
REFERENCES
[1] Luigi Atzori, Antonio Iera, and Giacomo Morabito. 2011. SIoT: Giving a Social Structure to the Internet of Things. IEEE Communications Letters 15, 11 (2011), 1193–1195. [2] Anson Bastos, Abhishek Nadgeri, Kuldeep Singh, Isaiah Onando Mulang’, Saeedeh Shekarpour, Johannes Hoffart, and Manohar Kaul. 2021. RECON: Relation Extraction using Knowledge Graph Context in a Graph Neural Network. In Proceedings of WWW. 1673–1685.
[3] Aleksandar Bojchevski, Johannes Klicpera, Bryan Perozzi, Amol Kapoor, Martin Blais, Benedek Rózemberczki, Michal Lukasik, and Stephan Günnemann. 2020. Scaling Graph Neural Networks with Approximate PageRank. In Proceedings of KDD. 2464–2473. [4] Antoine Bordes, Nicolas Usunier, Alberto García-Durán, Jason Weston, and Oksana Yakhnenko. 2013. Translating Embeddings for Modeling Multi-relational Data. In Proceedings of NeurIPS. 2787–2795.
[5] Yu Chen, Lingfei Wu, and Mohammed J Zaki. 2020. Iterative Deep Graph Learning for Graph Neural Networks: Better and Robust Node Embeddings. In Proceedings of NeurIPS.
[6] Xiaofeng Gao, Wenyi Xu, Mingding Liao, and Guihai Chen. 2021. Trust Prediction for Online Social Networks with Integrated Time-Aware Similarity. ACM Transactions on Knowledge Discovery from Data 15, 6 (2021), 95:1–95:30.
[7] Taher H. Haveliwala. 2002. Topic-sensitive PageRank. In Proceedings of WWW. 517–526. [8] Linmei Hu, Tianchi Yang, Chuan Shi, Houye Ji, and Xiaoli Li. 2019. Heterogeneous Graph Attention Networks for Semi-supervised Short Text Classification. In Proceedings of EMNLP. 4820–4829.
[9] Chao Huang, Huance Xu, Yong Xu, Peng Dai, Lianghao Xia, Mengyin Lu, Liefeng Bo, Hao Xing, Xiaoping Lai, and Yanfang Ye. 2021. Knowledge-aware Coupled Graph Neural Network for Social Recommendation. In Proceedings of AAAI. 4115–4122. [10] Nan Jiang, Wen Jie, Jin Li, Ximeng Liu, and Di Jin. 2022. GATrust: A MultiAspect Graph Attention Network Model for Trust Assessment in OSNs. IEEE Transactions on Knowledge and Data Engineering (2022).
[11] Di Jin, Cuiying Huo, Chundong Liang, and Liang Yang. 2021. Heterogeneous Graph Neural Network via Attribute Completion. In Proceedings of WWW. 391400. [12] Di Jin, Zhizhi Yu, Pengfei Jiao, Shirui Pan, Dongxiao He, Jia Wu, Philip S. Yu, and Weixiong Zhang. 2023. A Survey of Community Detection Approaches: From Statistical Modeling to Deep Learning. IEEE Transactions on Knowledge and Data Engineering 35, 2 (2023), 1149–1170. [13] Johannes Klicpera, Aleksandar Bojchevski, and Stephan Günnemann. 2019. Predict then Propagate: Graph Neural Networks meet Personalized PageRank. In Proceedings of ICLR.
[14] Quoc V. Le and Tomás Mikolov. 2014. Distributed Representations of Sentences and Documents. In Proceedings of ICML, Vol. 32. 1188–1196. [15] Junyi Li, Siqing Li, Wayne Xin Zhao, Gaole He, Zhicheng Wei, Nicholas Jing Yuan, and Ji-Rong Wen. 2020. Knowledge-Enhanced Personalized Review Generation with Capsule Graph Neural Network. In Proceedings of CIKM. 735–744. [16] Yu Li, Yuan Tian, Jiawei Zhang, and Yi Chang. 2020. Learning Signed Network Embedding via Graph Attention. In Proceedings of AAAI. 4772–4779. [17] Wanyu Lin, Zhaolin Gao, and Baochun Li. 2020. Guardian: Evaluating Trust in Online Social Networks with Graph Convolutional Networks. In Proceedings of INFOCOM. 914–923. [18] Guangchi Liu, Qi Chen, Qing Yang, Binhai Zhu, Honggang Wang, and Wei Wang. 2017. OpinionWalk: An efficient solution to massive trust assessment in online social networks. In Proceedings of INFOCOM. 1–9. [19] Guangchi Liu, Chenyu Li, and Qing Yang. 2019. NeuralWalk: Trust Assessment in Online Social Networks with Neural Networks. In Proceedings of INFOCOM. 1999–2007. [20] Guanfeng Liu, Yan Wang, Mehmet A. Orgun, and Ee-Peng Lim. 2013. Finding the Optimal Social Trust Path for the Selection of Trustworthy Service Providers in Complex Social Networks. IEEE Transactions on Services Computing 6, 2 (2013), 152–167. [21] Guangchi Liu, Qing Yang, Honggang Wang, Xiaodong Lin, and Mike P. Wittie. 2014. Assessment of multi-hop interpersonal trust in social networks by ThreeValued Subjective Logic. In Proceedings of INFOCOM. 1698–1706. [22] Paolo Massa and Paolo Avesani. 2005. Controversial Users Demand Local Trust Metrics: An Experimental Study on Epinions.com Community. In Proceedings of
AAAI. 121–126. [23] Jiliang Tang, Huiji Gao, Xia Hu, and Huan Liu. 2013. Exploiting homophily effect for trust prediction. In Proceedings of WSDM. 53–62. [24] Jiliang Tang, Huiji Gao, and Huan Liu. 2012. mTrust: discerning multi-faceted trust in a connected world. In Proceedings of WSDM. 93–102. [25] Jiliang Tang and Huan Liu. 2015. Trust in Social Media. In Synthesis Lectures on Information Security, Privacy, & Trust. 1–129.
[26] Hanghang Tong, Christos Faloutsos, and Jia-Yu Pan. 2006. Fast Random Walk with Restart and Its Applications. In Proceedings of ICDM. 613–622. [27] Shikhar Vashishth, Soumya Sanyal, Vikram Nitin, and Partha P. Talukdar. 2020. Composition-based Multi-Relational Graph Convolutional Networks. In Proceedings of ICLR.
[28] Petar Velickovic, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Liò, and Yoshua Bengio. 2018. Graph Attention Networks. In Proceedings of ICLR. [29] Jingwen Wang, Xuyang Jing, Zheng Yan, Yulong Fu, Witold Pedrycz, and Laurence T. Yang. 2020. A Survey on Trust Evaluation Based on Machine Learning. Comput. Surveys 53, 5 (2020), 107:1–107:36. [30] Qi Wang, Weiliang Zhao, Jian Yang, Jia Wu, Wenbin Hu, and Qianli Xing. 2019. DeepTrust: A Deep User Model of Homophily Effect for Trust Prediction. In Proceedings of ICDM. 618–627.
[31] Qi Wang, Weiliang Zhao, Jian Yang, Jia Wu, Shan Xue, Qianli Xing, and Philip S. Yu. 2021. C-DeepTrust: A Context-Aware Deep Trust Prediction Model in Online Social Networks. IEEE Transactions on Neural Networks and Learning Systems (2021). [32] Qi Wang, Weiliang Zhao, Jian Yang, Jia Wu, Chuan Zhou, and Qianli Xing. 2020. AtNE-Trust: Attributed Trust Network Embedding for Trust Prediction in Online Social Networks. In Proceedings of ICDM. 601–610. [33] Xiaozhi Wang, Tianyu Gao, Zhaocheng Zhu, Zhengyan Zhang, Zhiyuan Liu, Juanzi Li, and Jian Tang. 2021. KEPLER: A Unified Model for Knowledge Embedding and Pre-trained Language Representation. Transactions of the Association for Computational Linguistics 9 (2021), 176–194.
[34] Xiang Wang, Xiangnan He, Yixin Cao, Meng Liu, and Tat-Seng Chua. 2019. KGAT: Knowledge Graph Attention Network for Recommendation. In Proceedings of SIGKDD. 950–958. [35] Ying Wang, Xin Wang, Jiliang Tang, Wanli Zuo, and Guoyong Cai. 2015. Modeling Status Theory in Trust Prediction. In Proceedings of AAAI. 1875–1881. [36] Felix Wu, Amauri H. Souza Jr., Tianyi Zhang, Christopher Fifty, Tao Yu, and Kilian Q. Weinberger. 2019. Simplifying Graph Convolutional Networks. In Proceedings of ICML. 6861–6871.
[37] Lingfei Wu, Peng Cui, Jian Pei, and Liang Zhao. 2022. Graph Neural Networks: Foundations, Frontiers, and Applications. Springer Singapore. 725 pages.
[38] Hui Xia, Fu Xiao, Sanshun Zhang, Chun-qiang Hu, and Xiuzhen Cheng. 2019. Trustworthiness Inference Framework in the Social Internet of Things: A ContextAware Approach. In Proceedings of INFOCOM. 838–846. [39] Jiacheng Xu, Xipeng Qiu, Kan Chen, and Xuanjing Huang. 2017. Knowledge Graph Representation with Jointly Structural and Textual Encoding. In Proceedings of IJCAI. 1318–1324.
[40] Pinghua Xu, Wenbin Hu, Jia Wu, and Bo Du. 2019. Link Prediction with Signed Latent Factors in Signed Social Networks. In Proceedings of SIGKDD. 1046–1054. [41] Pinghua Xu, Wenbin Hu, Jia Wu, Weiwei Liu, Bo Du, and Jian Yang. 2019. Social Trust Network Embedding. In Proceedings of ICDM. 678–687. [42] Yuan Yao, Hanghang Tong, Xifeng Yan, Feng Xu, and Jian Lu. 2013. MATRI: a multi-aspect and transitive trust inference model. In Proceedings of WWW. 1467–1476. [43] Zhizhi Yu, Di Jin, Ziyang Liu, Dongxiao He, Xiao Wang, Hanghang Tong, and Jiawei Han. 2021. AS-GCN: Adaptive Semantic Architecture of Graph Convolutional Networks for Text-Rich Networks. In Proceedings of ICDM. 837–846. [44] Xinyang Zhang, Chenwei Zhang, Xin Luna Dong, Jingbo Shang, and Jiawei Han. 2021. Minimally-Supervised Structure-Rich Text Categorization via Learning on Text-Rich Networks. In Proceedings of WWW. 3258–3268.


WWW ’23, April 30-May 4, 2023, Austin, TX, USA Zhizhi Yu1, Di Jin1, Cuiying Huo1, Zhiqiang Wang1, Xiulong Liu1, Heng Qi2, Jia Wu3, Lingfei Wu4
A NOTATIONS
Here we list the key notations in the main text in Table 5.
Table 5: Summary of notations.
Notation Description
G A Social Trust Internet of Things.
V , E The sets of nodes and edges of a SIoT.
A, D The adjacency matrix and node degree matrix.
ti j The trustworthiness from node vi to node v j .
N
i The set of neighbors of node vi .
(h, r, t) A triplet in the knowledge graph.
W
ψ The type-specific linear transformation matrix.
P The personalized PageRank matrix.
h
i, hi The latent embeddings of a given user node vi as trustor role or trustee role, respectively.
σ The non-linear activation function.
α, β Weights of type-level and node-level attentions.
B DETAILS OF EXPERIMENTAL SETTINGS
B.1 Datasets
• FilmTrust is extracted from the film review website, which consists of two kinds of information, that is, social trust relationships between users; as well as interactive connections between users and objects. For FilmTrust, considering that there is no information about users’ comment behaviors and object names, we utilize random vectors to initialize user and object embeddings, which are trainable during the message passing process. • Ciao and Epinions are two who-trusts-whom knowledgesharing websites that contain four types of information, that is, explicit trust relationships between users; connections between users and objects representing interactive relationships; comment behaviors that reveal users’ attitudes and preferences in the form of text; as well as object descriptions that reflect the characteristics of objects. For these two datasets, we reserve users with more than 15 comment behaviors and objects with more than 10 comment behaviors.
B.2 Baselines
• GAT [28] is an attention-based graph neural network which assigns different weights to neighbors to improve the aggregating process. • SGC [36] is a simplified graph neural network that reduces the complexity of model by removing nonlinearities and collapsing weight matrices between consecutive layers. • SLF [40] is a signed network embedding model, which associates each type of social relationship to the comprehensive effects of positive and negative signed latent factors, and learns node embeddings by minimizing a negative loglikelihood objective function.
• STNE [41] is a social trust network embedding model that preserves both a node’s relations to latent factors and the trust transfer patterns for trust prediction. • SNEA [16] is a signed network embedding model through designing a graph attentional layer that utilizes a masked selfattention mechanism to calculate the importance coefficients of neighbors. • DeepTrust [30] is a trust evaluation model based on the homophily theory, which effectively combines the users’ comment behaviors and the characteristics of users’ interested objects for assessing trustworthiness. • AtNE-Trust [32] is a deep trust prediction model that captures user embeddings through taking into account of both the dual roles (trustor or trustee) and the connectivity properties of users. • Guardian [17] is an end-to-end trust evaluation model that explicitly incorporates the popularity trust and engagement trust into user modeling using graph neural networks.
C ADDITIONAL EXPERIMENTS
Following the setting from the Section 4.4, we give the additional analysis of top k for PPR-based neighbor sampling and the dimension of final embedding on FilmTrust dataset in Figure 5. As shown, the changing process of these two parameters follow the same way with the results in Figure 3 and Figure 4.
(a) The number of top k (b) The dimension of final embedding
Figure 5: Impact of hyper-parameter scope.